<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.co.sun.mapper.MemberMapper">

	<resultMap type="kr.co.sun.domain.MemberVO" id="memberMap">
	
		<id property="userid" column="userid" />
		<result property="userid" column="userid" />
		<result property="userpw" column="userpw" />
		<result property="userName" column="username" />
		<result property="userEmail" column="useremail" />
		<result property="regDate" column="regdate" />
		<result property="updateDate" column="updatedate" />
		<collection property="authList" resultMap="authMap">
		</collection>
	
	</resultMap>
	
	<resultMap type="kr.co.sun.domain.AuthVO" id="authMap">
		<result property="userid" column="userid" />
		<result property="auth" column="auth" />
	</resultMap>

	<select id="read" resultMap="memberMap">
		select
			mem.userid, userpw, username, useremail, regdate, updatedate, auth
		from
			tbl_member mem LEFT OUTER JOIN tbl_member_auth auth on mem.userid = auth.userid
		where
			mem.userid =#{userid}
	</select>
	
	<select id="getUserById" resultType="kr.co.sun.domain.MemberVO">
		select
			userid, userpw, username, enabled, regdate
		from
			tbl_member
		where
			userid = #{userid}
	</select>
	
	<select id="getUserByEmail" resultType="kr.co.sun.domain.MemberVO">
		select
			userid, userpw, username, enabled, regdate
		from
			tbl_member
		where
			useremail = #{userEmail}
	</select>
	
	<insert id="insert">
		insert into 
			tbl_member(userid, userpw, userName, userEmail)
		values 
			(#{userid}, #{userpw}, #{userName}, #{userEmail})
	</insert>
	
	<insert id="insertRole">
		insert into 
			tbl_member_auth (userid, auth)
		values 
			(#{userid}, #{auth})
	</insert>
	
	<insert id="kakaoInsert">
		insert into 
			tbl_member(userid, userpw, userName, userEmail, snsId)
		values
			(#{userid}, #{userpw}, #{userName}, #{userEmail}, #{snsId})
	</insert>
	
	<!-- snsId로 회원정보 얻기 -->
	<select id="kakaoSelect" resultType="kr.co.sun.domain.MemberVO" parameterType="String">
	    SELECT userid, username, useremail 
	    FROM tbl_member 
	    WHERE snsId = #{snsId}
	</select>
	
	<!-- snsId로 회원 아이디 찾기 -->
	<select id="findUserBySnsId" resultType="String" parameterType="String">
	    SELECT userid 
	    FROM tbl_member 
	    WHERE snsId = #{snsId}
	</select>
		
	
    <update id="updateUser" parameterType="kr.co.sun.domain.MemberVO">
    	update tbl_member
    	<set>
    		<if test="userEmail != null">
    			userEmail = #{userEmail},
    		</if>
    		<if test="userpw != null">
    			userpw = #{userpw},
    		</if>
    			updatedate = sysdate
    	</set>
    	where
    		userid = #{userid}
    </update>
	

	<delete id="deleteUser">
		delete from tbl_member where userid = #{userid}
	</delete>
	
	<delete id="deleteUserRole">
		delete from tbl_member_auth where userid = #{userid}
	</delete>
	
	
	
	
	
	<sql id="pagination">
		<trim prefix="(" suffix=") AND" prefixOverrides="OR">
			<foreach item='item' collection="page.typeArr">
				<trim prefix="OR">
					<choose>
						<when test="item == 'T'.toString()">
							title like '%' || #{page.keyword} || '%'
						</when>
						<when test="item == 'C'.toString()">
							content like '%' || #{page.keyword} || '%'
						</when>
						<when test="item == 'P'.toString()">
							type like '%' || #{page.keyword} || '%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim> 
	</sql>
	
	<select id="getMyPost" resultType="kr.co.sun.dto.MyBoardList">
	    <![CDATA[
	        select 
	            bno, title, content, writer, regdate, updatedate, replycnt, readCnt, type
	        from 
	            (
	            select 
	                rownum rn, bno, title, content, writer, regdate, updatedate, replycnt, readCnt, type
	            from 
	                (
	                select * from (
	                    select * from movie_board where writer = #{userid} and deleted = 'N'
	                    UNION ALL
	                    select * from game_board where writer = #{userid} and deleted = 'N'
	                    UNION ALL
	                    select * from book_board where writer = #{userid} and deleted = 'N'
	                    UNION ALL
	                    select * from etc_board where writer = #{userid} and deleted = 'N'
	                ) all_boards
	                order by regdate desc 
	                )
	            where
	    ]]>
	    
	    <include refid="pagination"/>
	    
	    <![CDATA[
	               rownum <= #{page.pageNum} * #{page.amount}
	            )
	        where rn > (#{page.pageNum} - 1) * #{page.amount} 
	    ]]>
	</select>
	
	<select id="getTotalCount" resultType="int">
		select count(*) 
		from (
	        select * from movie_board where writer = #{userid} and deleted = 'N'
	        UNION ALL
	        select * from game_board where writer = #{userid} and deleted = 'N'
	        UNION ALL
	        select * from book_board where writer = #{userid} and deleted = 'N'
	        UNION ALL
	        select * from etc_board where writer = #{userid} and deleted = 'N'
	    )
		where
			<include refid="pagination" />
			bno > 0
	</select>
	
	
	<sql id="Rpagination">
		<trim prefix="(" suffix=") AND" prefixOverrides="OR">
			<foreach item='item' collection="page.typeArr">
				<trim prefix="OR">
					<choose>
						<when test="item == 'T'.toString()">
							type like '%' || #{page.keyword} || '%'
						</when>
						<when test="item == 'C'.toString()">
							reply like '%' || #{page.keyword} || '%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim> 
	</sql>
	
	<select id="getMyReply" resultType="kr.co.sun.dto.MyReplyList">
	    <![CDATA[
	        select 
	            rno, bno, reply, replyer, replydate, updateDate,type
	        from 
	            (
	            select 
	                rownum rn, rno, bno, reply, replyer, replyDate, updateDate,type
	            from 
	                (
	                select * from (
	                    select * from MOVIE_REPLY where replyer = #{userid} 
	                    UNION ALL
	                    select * from GAME_REPLY where replyer = #{userid} 
	                    UNION ALL
	                    select * from BOOK_REPLY where replyer = #{userid}
	                    UNION ALL
	                    select * from ETC_REPLY where replyer = #{userid} 
	                ) all_replies
	                order by replyDate desc 
	                )
	            where
	    ]]>
	    
	    <include refid="Rpagination"/>
	    
	    <![CDATA[
	               rownum <= #{page.pageNum} * #{page.amount}
	            )
	        where rn > (#{page.pageNum} - 1) * #{page.amount} 
	    ]]>
	</select>
	
	<select id="getRTotalCount" resultType="int">
		select count(*) 
		from (
	        select * from MOVIE_REPLY where replyer = #{userid} 
	        UNION ALL
	        select * from GAME_REPLY where replyer = #{userid}
	        UNION ALL
	        select * from BOOK_REPLY where replyer = #{userid} 
	        UNION ALL
	        select * from ETC_REPLY where replyer = #{userid}
	    )
		where
			<include refid="Rpagination" />
			rno > 0
	</select>


</mapper>








